from books import Record
from books.address_book.error import ContactNotFound, ContactAlreadyExist
from colorama import Fore, Style

def handle_contact_command(command: str, address_book):
    try:
        if command.startswith("add contact "):
            name = command[len("add contact "):].strip()
            if name in address_book:
                print(Fore.RED + f"‚ö†Ô∏è –ö–æ–Ω—Ç–∞–∫—Ç '{name}' –≤–∂–µ —ñ—Å–Ω—É—î.")
                return

            record = Record(name)
            
            phone = input("üìû –í–≤–µ–¥—ñ—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω: ").strip()
            if phone:
                record.add_phone(phone)

            email = input("üìß –í–≤–µ–¥—ñ—Ç—å email: ").strip()
            if email:
                record.add_email(email)

            address = input("üè† –í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É: ").strip()
            if address:
                record.add_address(address)

            birthday = input("üéÇ –í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (YYYY-MM-DD): ").strip()
            if birthday:
                record.set_birthday(birthday)

            address_book.add_record(record)
            print(Fore.GREEN + f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç '{name}' —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ.")

        elif command.startswith("edit contact "):
            name = command[len("edit contact "):].strip()
            record = address_book.find(name)

            print(f"‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É: {Fore.BLUE + name}")
            phone = input("üìû –ù–æ–≤–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω (Enter —â–æ–± –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏): ").strip()
            email = input("üìß –ù–æ–≤–∏–π email (Enter —â–æ–± –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏): ").strip()
            address = input("üè† –ù–æ–≤–∞ –∞–¥—Ä–µ—Å–∞ (Enter —â–æ–± –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏): ").strip()
            birthday = input("üéÇ –ù–æ–≤–∞ –¥–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (Enter —â–æ–± –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏): ").strip()

            if phone:
                record.edit_phone(phone)
            if email:
                record.edit_email(email)
            if address:
                record.edit_address(address)
            if birthday:
                record.set_birthday(birthday)

            print(Fore.GREEN + f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç '{name}' –æ–Ω–æ–≤–ª–µ–Ω–æ.")

        elif command.startswith("show contact "):
            name = command[len("show contact "):].strip()
            record = address_book.find(name)
            print(record)

        elif command.startswith("delete contact "):
            name = command[len("delete contact "):].strip()
            address_book.delete_record(name)
            print(Fore.YELLOW + f"üóëÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç '{name}' –≤–∏–¥–∞–ª–µ–Ω–æ.")

        elif command == "show all contacts":
            if not address_book.data:
                print("üì≠ –ù–µ–º–∞—î –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤.")
            else:
                for record in address_book.values():
                    print(record)

        elif command.startswith("show birthdays"):
            try:
                days = int(command[len("show birthdays"):].strip())
            except ValueError:
                days = 7
            upcoming = address_book.upcoming_birthdays_by_days(days)
            if not upcoming:
                print("üì≠ –ù–µ–º–∞—î –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω—å —É –Ω–∞–π–±–ª–∏–∂—á—ñ –¥–Ω—ñ.")
            else:
                for date, records in upcoming.items():
                    print(f"\nüìÖ {date}:")
                    for rec in records:
                        print(f"  - {Fore.BLUE + rec.name}")

        elif command.startswith("search contact "):
            keyword = command[len("search contact "):].strip()
            results = address_book.search(keyword)
            if not results:
                print(f"üì≠ –ö–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∑ –∫–ª—é—á–æ–≤–∏–º —Å–ª–æ–≤–æ–º '{keyword}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
            else:
                for rec in results:
                    print(rec)

        else:
            print(Fore.RED + "‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–∞.")

    except (ContactNotFound, ContactAlreadyExist) as e:
        print(Fore.RED + f"‚ö†Ô∏è {e}")
    except Exception as e:
        print(Fore.RED + f"‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
